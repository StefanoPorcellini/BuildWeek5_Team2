@model ClinicaVeterinaria.Models.Animale

@{
    ViewData["Title"] = "Edit";
}

<h1>Modifica</h1>

<h4>Animale</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TipologiaAnimale" class="control-label"></label>
                <input asp-for="TipologiaAnimale" class="form-control" />
                <span asp-validation-for="TipologiaAnimale" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ColoreManto" class="control-label"></label>
                <input asp-for="ColoreManto" class="form-control" />
                <span asp-validation-for="ColoreManto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataNascita" class="control-label"></label>
                <input asp-for="DataNascita" class="form-control" />
                <span asp-validation-for="DataNascita" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="PossiedeChip" /> @Html.DisplayNameFor(model => model.PossiedeChip)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="NumeroChip" class="control-label"></label>
                <input asp-for="NumeroChip" class="form-control" />
                <span asp-validation-for="NumeroChip" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Randagio" /> @Html.DisplayNameFor(model => model.Randagio)
                </label>
            </div>
            <div class="form-group">
                <label for="ProprietarioSearch">Cerca Proprietario</label>
                <input type="text" id="ProprietarioSearch" class="form-control" placeholder="Nome, cognome o codice fiscale..." />
            </div>
            <div class="form-group">
                <label asp-for="ProprietarioId" class="control-label"></label>
                <select asp-for="ProprietarioId" class="form-control" id="ProprietarioSelect">
                    <option value="">-- Seleziona un proprietario --</option>
                </select>
                <span asp-validation-for="ProprietarioId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Salva" class="btn btn-primary my-2" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-info" asp-action="Index">Torna alla lista</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('ProprietarioSearch');
            const select = document.getElementById('ProprietarioSelect');
            const searchButton = document.getElementById('searchButton');

            // Prevenire l'invio del form premendo "Enter" nella casella di ricerca
            searchInput.addEventListener('keydown', function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    searchButton.click();
                }
            });

            if (!searchInput || !select) {
                console.error('Elemento ProprietarioSearch o ProprietarioSelect non trovato nel DOM.');
                return;
            }

            // Funzione di ricerca proprietari
            searchInput.addEventListener('input', async function () {
                var searchTerm = this.value;

                // Se il termine di ricerca è vuoto, non fare nulla
                if (!searchTerm.trim()) {
                    return;
                }

                try {
                    const response = await fetch('/Proprietari/Search?term=' + encodeURIComponent(searchTerm));

                    // Verifica se la risposta è andata a buon fine
                    if (!response.ok) {
                        throw new Error('Errore nella risposta del server');
                    }

                    const proprietari = await response.json(); // Parse del JSON

                    // Svuota il select prima di riempirlo
                    select.innerHTML = '<option value="">-- Seleziona un proprietario --</option>';

                    proprietari.forEach(p => {
                        const option = document.createElement('option');
                        option.value = p.id;
                        // Concatenare Nome e Cognome per creare il NomeCompleto e aggiungere il Codice Fiscale
                        option.text = `${p.nome} ${p.cognome} (${p.codiceFiscale})`;

                        select.appendChild(option);
                    });

                    // Pre-seleziona il proprietario corrente se già impostato
                    const currentProprietarioId = '@Model.ProprietarioId?.ToString()';
                    if (currentProprietarioId && currentProprietarioId !== "null") {
                        select.value = currentProprietarioId;
                    }

                } catch (error) {
                    console.error('Errore nella ricerca dei proprietari:', error);
                }
            });

            // Pre-seleziona il proprietario corrente al caricamento della pagina
            const currentProprietarioId = '@Model.ProprietarioId?.ToString()';
            if (currentProprietarioId && currentProprietarioId !== "null") {
                select.value = currentProprietarioId;
            }
        });
    </script>
}
